============
Installation
============

1. Prerequisites
================

    Tree.io supports Linux and Mac OS X. Windows is not officially
    supported, although it is possible to install it on Win.

    Supported version of Python is 2.5+
    
    Tree.io also needs a bunch of Python modules, but you probably
    don't need to worry with that - it'll download and build most
    of them automatically.

    However you do need to make sure you've got a few things for
    Tree.io to compile some of the modules. Specifically, we need
    to have all the requirements for lxml and PIL (Python Imaging
    Library).

    On a Debian-based system you can simply do:

        sudo apt-get install build-essential python-dev
        sudo apt-get build-dep python-lxml python-imaging

    On other systems you'll need to get a compiler (usually gcc),
    Python headers and all the requirements for lxml and PIL.

    Check out these links:

    http://lxml.de/build.html
    http://effbot.org/zone/pil-index.htm


2. Building models
==================

    Once you have all the prerequisites, just run:
    
        python manage.py update_ve
        ./bin/patch

3. Setting up database
======================

    First, you need to create a database for Tree.io

    With MySQL, it's usually something like this ::

        $ mysql -u username -p
        > create database database_name;
        > grant all privileges on database_name.* to some_user@localhost identified by 'some_password';
        > \q

    For other database systems refer to the relevant documentation.

    To install the database, just run ::

        python manage.py installdb

    If your setup is correct, it should install everything into the database for you.

    The default username and password is 'admin' / 'admin'


4. Launching Tree.io
====================

    You can try Tree.io by running::

        python manage.py runserver

    Then just go to http://localhost:8000/

    Please refer to Django docs on how to set up Tree.io to run behind Apache or Nginx.
    There's a friendly fcgi script and an example nginx config.




